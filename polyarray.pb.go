// Code generated by protoc-gen-go. DO NOT EDIT.
// source: polyarray.proto

package polyarray

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// PolyArray
//
// Since 0.1.1
type PolyArray struct {
	// N is the count of elts
	N int32 `protobuf:"varint,10,opt,name=N,proto3" json:"N,omitempty"`
	// Every 1024 elts segment has a 64-bit bitmap to describe the spans in it,
	// and another 64-bit rank: the count of `1` in preceding bitmaps.
	Bitmap []uint64 `protobuf:"varint,20,rep,packed,name=Bitmap,proto3" json:"Bitmap,omitempty"`
	// Polynomial and config of every span.
	// 3 doubles to represent a polynomial;
	Polynomials []float64 `protobuf:"fixed64,21,rep,packed,name=Polynomials,proto3" json:"Polynomials,omitempty"`
	// Config stores the offset of residuals in Residuals and the bit width to
	// store a residual in a span.
	Configs []uint64 `protobuf:"varint,22,rep,packed,name=Configs,proto3" json:"Configs,omitempty"`
	// packed residuals for every elt.
	Residuals            []uint64 `protobuf:"varint,23,rep,packed,name=Residuals,proto3" json:"Residuals,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolyArray) Reset()         { *m = PolyArray{} }
func (m *PolyArray) String() string { return proto.CompactTextString(m) }
func (*PolyArray) ProtoMessage()    {}
func (*PolyArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_polyarray_deff4e53da9e9a4b, []int{0}
}
func (m *PolyArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolyArray.Unmarshal(m, b)
}
func (m *PolyArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolyArray.Marshal(b, m, deterministic)
}
func (dst *PolyArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolyArray.Merge(dst, src)
}
func (m *PolyArray) XXX_Size() int {
	return xxx_messageInfo_PolyArray.Size(m)
}
func (m *PolyArray) XXX_DiscardUnknown() {
	xxx_messageInfo_PolyArray.DiscardUnknown(m)
}

var xxx_messageInfo_PolyArray proto.InternalMessageInfo

func (m *PolyArray) GetN() int32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *PolyArray) GetBitmap() []uint64 {
	if m != nil {
		return m.Bitmap
	}
	return nil
}

func (m *PolyArray) GetPolynomials() []float64 {
	if m != nil {
		return m.Polynomials
	}
	return nil
}

func (m *PolyArray) GetConfigs() []uint64 {
	if m != nil {
		return m.Configs
	}
	return nil
}

func (m *PolyArray) GetResiduals() []uint64 {
	if m != nil {
		return m.Residuals
	}
	return nil
}

func init() {
	proto.RegisterType((*PolyArray)(nil), "PolyArray")
}

func init() { proto.RegisterFile("polyarray.proto", fileDescriptor_polyarray_deff4e53da9e9a4b) }

var fileDescriptor_polyarray_deff4e53da9e9a4b = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0xc8, 0xcf, 0xa9,
	0x4c, 0x2c, 0x2a, 0x4a, 0xac, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0xea, 0x66, 0xe4, 0xe2,
	0x0c, 0xc8, 0xcf, 0xa9, 0x74, 0x04, 0x89, 0x09, 0xf1, 0x70, 0x31, 0xfa, 0x49, 0x70, 0x29, 0x30,
	0x6a, 0xb0, 0x06, 0x31, 0xfa, 0x09, 0x89, 0x71, 0xb1, 0x39, 0x65, 0x96, 0xe4, 0x26, 0x16, 0x48,
	0x88, 0x28, 0x30, 0x6b, 0xb0, 0x04, 0x41, 0x79, 0x42, 0x0a, 0x5c, 0xdc, 0x20, 0x2d, 0x79, 0xf9,
	0xb9, 0x99, 0x89, 0x39, 0xc5, 0x12, 0xa2, 0x0a, 0xcc, 0x1a, 0x8c, 0x41, 0xc8, 0x42, 0x42, 0x12,
	0x5c, 0xec, 0xce, 0xf9, 0x79, 0x69, 0x99, 0xe9, 0xc5, 0x12, 0x62, 0x60, 0xad, 0x30, 0xae, 0x90,
	0x0c, 0x17, 0x67, 0x50, 0x6a, 0x71, 0x66, 0x4a, 0x29, 0x48, 0xa7, 0x38, 0x58, 0x0e, 0x21, 0xe0,
	0xc4, 0x1d, 0xc5, 0x09, 0x77, 0x60, 0x12, 0x1b, 0xd8, 0x85, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xdf, 0xfc, 0x4d, 0xee, 0xb4, 0x00, 0x00, 0x00,
}
